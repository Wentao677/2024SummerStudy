[
    {
        "node_type": "keyword_extraction",
        "keywords": [
            "power of superheroes",
            "height",
            "average height",
            "superheroes",
            "power_name",
            "height_cm",
            "AVG(height_cm)",
            "MULTIPLY(AVG(height_cm), 0.8)",
            "80%"
        ],
        "status": "success"
    },
    {
        "node_type": "entity_retrieval",
        "similar_columns": {
            "superpower": [
                "power_name"
            ],
            "superhero": [
                "height_cm"
            ]
        },
        "similar_values": {
            "attribute": {
                "attribute_name": [
                    "Power"
                ]
            },
            "superhero": {
                "superhero_name": [
                    "Power Man"
                ]
            },
            "superpower": {
                "power_name": [
                    "Power Cosmic"
                ]
            }
        },
        "status": "success"
    },
    {
        "node_type": "context_retrieval",
        "schema_with_descriptions": {
            "superhero": {
                "height_cm": {
                    "column_name": "height cm",
                    "column_description": "the height of the superhero",
                    "value_description": "The unit of height is centimeter. If the height_cm is NULL or 0, it means the height of the superhero is missing."
                },
                "weight_kg": {
                    "column_name": "weight kg",
                    "column_description": "the weight of the superhero",
                    "value_description": "The unit of weight is kilogram. If the weight_kg is NULL or 0, it means the weight of the superhero is missing."
                },
                "full_name": {
                    "column_name": "full name",
                    "column_description": "the full name of the superhero",
                    "value_description": "The full name of a person typically consists of their given name, also known as their first name or personal name, and their surname, also known as their last name or family name. For example, if someone's given name is \"John\" and their surname is \"Smith,\" their full name would be \"John Smith.\""
                },
                "superhero_name": {
                    "column_name": "superhero name",
                    "column_description": "the name of the superhero",
                    "value_description": ""
                },
                "id": {
                    "column_name": "",
                    "column_description": "the unique identifier of the superhero",
                    "value_description": ""
                }
            },
            "hero_attribute": {
                "attribute_value": {
                    "column_name": "attribute value",
                    "column_description": "the attribute value",
                    "value_description": "If a superhero has a higher attribute value on a particular attribute, it means that they are more skilled or powerful in that area compared to other superheroes. For example, if a superhero has a higher attribute value for strength, they may be able to lift heavier objects or deliver more powerful punches than other superheroes."
                }
            },
            "hero_power": {
                "power_id": {
                    "column_name": "power id",
                    "column_description": "the id of the power Maps to superpower(id)",
                    "value_description": "In general, a superhero's attributes provide the foundation for their abilities and help to define who they are, while their powers are the specific abilities that they use to fight crime and protect others."
                }
            }
        },
        "status": "success"
    },
    {
        "node_type": "column_filtering",
        "tentative_schema": {
            "alignment": [
                "id"
            ],
            "attribute": [
                "attribute_name",
                "id"
            ],
            "colour": [
                "id"
            ],
            "gender": [
                "id"
            ],
            "publisher": [
                "id"
            ],
            "race": [
                "id"
            ],
            "superhero": [
                "superhero_name",
                "height_cm",
                "id",
                "gender_id",
                "eye_colour_id",
                "hair_colour_id",
                "skin_colour_id",
                "race_id",
                "publisher_id",
                "alignment_id"
            ],
            "hero_attribute": [
                "hero_id",
                "attribute_id"
            ],
            "superpower": [
                "power_name",
                "id"
            ],
            "hero_power": [
                "hero_id",
                "power_id"
            ]
        },
        "missing_table_status": "success",
        "missing_tables": [],
        "missing_column_status": "success",
        "missing_columns": [],
        "correct_columns": {
            "superhero": [
                "height_cm",
                "id"
            ],
            "superpower": [
                "power_name",
                "id"
            ],
            "hero_power": [
                "hero_id",
                "power_id"
            ]
        },
        "status": "success"
    },
    {
        "node_type": "table_selection",
        "tentative_schema": {
            "superhero": [
                "superhero_name",
                "height_cm",
                "id",
                "gender_id",
                "eye_colour_id",
                "hair_colour_id",
                "skin_colour_id",
                "race_id",
                "publisher_id",
                "alignment_id"
            ],
            "hero_power": [
                "hero_id",
                "power_id"
            ],
            "superpower": [
                "power_name",
                "id"
            ]
        },
        "chain_of_thought_reasoning": "To answer the question, we need to identify the superheroes with height greater than 80% of the average height of all superheroes. This requires calculating the average height, which is stored in the `superhero` table. We also need to identify the powers of these superheroes, which are stored in the `hero_power` table. Additionally, we need to filter the superheroes based on their height, which is stored in the `superhero` table. The `alignment` table is not necessary for this question.",
        "selected_tables": [
            "superhero",
            "hero_power"
        ],
        "missing_table_status": "success",
        "missing_tables": [],
        "missing_column_status": "success",
        "missing_columns": [],
        "correct_columns": {
            "superhero": [
                "height_cm",
                "id"
            ],
            "superpower": [
                "power_name",
                "id"
            ],
            "hero_power": [
                "hero_id",
                "power_id"
            ]
        },
        "status": "success"
    },
    {
        "node_type": "column_selection",
        "tentative_schema": {
            "superhero": [
                "id",
                "height_cm"
            ],
            "hero_power": [
                "power_id"
            ],
            "superpower": [
                "power_name"
            ]
        },
        "model_selected_columns": {
            "superhero": [
                "id",
                "height_cm"
            ],
            "hero_power": [
                "power_id"
            ],
            "superpower": [
                "power_name"
            ]
        },
        "chain_of_thought_reasoning": "The question asks to list the power of superheroes with height greater than 80% of the average height of all superheroes. The hint provides the formula to calculate this threshold. We need to find the average height, which is stored in the height_cm column of the superhero table. We also need the power_name column from the hero_power and superpower tables to get the powers of the superheroes. Finally, we need to filter the results based on the calculated threshold.",
        "missing_table_status": "success",
        "missing_tables": [],
        "missing_column_status": "missing_column",
        "missing_columns": [
            "'superpower'.'id'",
            "'hero_power'.'hero_id'"
        ],
        "correct_columns": {
            "superhero": [
                "height_cm",
                "id"
            ],
            "superpower": [
                "power_name",
                "id"
            ],
            "hero_power": [
                "hero_id",
                "power_id"
            ]
        },
        "status": "success"
    },
    {
        "node_type": "candidate_generation",
        "SQL": "SELECT DISTINCT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm > ( SELECT AVG(height_cm) * 0.8 FROM superhero ) ",
        "status": "success"
    },
    {
        "node_type": "revision",
        "chain_of_thought_reasoning": "First, I identified the columns needed for the query: power_name, height_cm. Then, I joined the superhero table with the hero_power and superpower tables to get the power_name. Next, I calculated the average height of all superheroes and multiplied it by 0.8 to get the threshold height. Finally, I filtered the results to include only the powers of superheroes with height greater than the threshold height.",
        "SQL": "SELECT DISTINCT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)",
        "status": "success"
    },
    {
        "node_type": "evaluation",
        "candidate_generation": {
            "exec_res": 1,
            "exec_err": "--",
            "Question": "List the power of superheroes with height greater than 80% of the average height of all superheroes.",
            "Evidence": "power of superheroes refers to power_name; height greater than 80% of the average height of all superheroes = height_cm > MULTIPLY(AVG(height_cm), 0.8);",
            "GOLD_SQL": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm * 100 > ( SELECT AVG(height_cm) FROM superhero ) * 80",
            "PREDICTED_SQL": "SELECT DISTINCT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm > ( SELECT AVG(height_cm) * 0.8 FROM superhero ) "
        },
        "revision": {
            "exec_res": 1,
            "exec_err": "--",
            "Question": "List the power of superheroes with height greater than 80% of the average height of all superheroes.",
            "Evidence": "power of superheroes refers to power_name; height greater than 80% of the average height of all superheroes = height_cm > MULTIPLY(AVG(height_cm), 0.8);",
            "GOLD_SQL": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm * 100 > ( SELECT AVG(height_cm) FROM superhero ) * 80",
            "PREDICTED_SQL": "SELECT DISTINCT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)"
        },
        "status": "success"
    }
]