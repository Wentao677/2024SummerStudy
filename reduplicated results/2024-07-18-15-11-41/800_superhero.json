[
    {
        "node_type": "keyword_extraction",
        "keywords": [
            "superheroes",
            "blue eyes",
            "percentage",
            "SUM(superhero_name WHERE color = 'Blue')",
            "COUNT(superhero_name)",
            "color",
            "eye_colour_id",
            "7",
            "Blue"
        ],
        "status": "success"
    },
    {
        "node_type": "entity_retrieval",
        "similar_columns": {
            "colour": [
                "colour",
                "colour"
            ],
            "superhero": [
                "superhero_name",
                "eye_colour_id"
            ]
        },
        "similar_values": {
            "superhero": {
                "superhero_name": [
                    "Snake-Eyes"
                ]
            },
            "colour": {
                "colour": [
                    "Blue"
                ]
            }
        },
        "status": "success"
    },
    {
        "node_type": "context_retrieval",
        "schema_with_descriptions": {
            "superhero": {
                "eye_colour_id": {
                    "column_name": "eye colour id",
                    "column_description": "the id of the superhero's eye color",
                    "value_description": ""
                },
                "full_name": {
                    "column_name": "full name",
                    "column_description": "the full name of the superhero",
                    "value_description": "The full name of a person typically consists of their given name, also known as their first name or personal name, and their surname, also known as their last name or family name. For example, if someone's given name is \"John\" and their surname is \"Smith,\" their full name would be \"John Smith.\""
                },
                "superhero_name": {
                    "column_name": "superhero name",
                    "column_description": "the name of the superhero",
                    "value_description": ""
                },
                "skin_colour_id": {
                    "column_name": "skin colour id",
                    "column_description": "the id of the superhero's skin color",
                    "value_description": ""
                },
                "hair_colour_id": {
                    "column_name": "hair colour id",
                    "column_description": "the id of the superhero's hair color",
                    "value_description": ""
                }
            },
            "colour": {
                "colour": {
                    "column_name": "",
                    "column_description": "the color of the superhero's skin/eye/hair/etc",
                    "value_description": ""
                }
            },
            "race": {
                "race": {
                    "column_name": "",
                    "column_description": "the race of the superhero",
                    "value_description": "In the context of superheroes, a superhero's race would refer to the particular group of people that the superhero belongs to base on these physical characteristics"
                }
            }
        },
        "status": "success"
    },
    {
        "node_type": "column_filtering",
        "tentative_schema": {
            "alignment": [
                "id"
            ],
            "attribute": [
                "id"
            ],
            "colour": [
                "colour",
                "id"
            ],
            "gender": [
                "id"
            ],
            "publisher": [
                "id"
            ],
            "race": [
                "id"
            ],
            "superhero": [
                "eye_colour_id",
                "superhero_name",
                "id",
                "gender_id",
                "hair_colour_id",
                "skin_colour_id",
                "race_id",
                "publisher_id",
                "alignment_id"
            ],
            "hero_attribute": [
                "hero_id",
                "attribute_id"
            ],
            "superpower": [
                "id"
            ],
            "hero_power": [
                "hero_id",
                "power_id"
            ]
        },
        "missing_table_status": "success",
        "missing_tables": [],
        "missing_column_status": "success",
        "missing_columns": [],
        "correct_columns": {
            "superhero": [
                "eye_colour_id",
                "id"
            ],
            "colour": [
                "id",
                "colour"
            ]
        },
        "status": "success"
    },
    {
        "node_type": "table_selection",
        "tentative_schema": {
            "colour": [
                "colour",
                "id"
            ],
            "superhero": [
                "eye_colour_id",
                "superhero_name",
                "id",
                "gender_id",
                "hair_colour_id",
                "skin_colour_id",
                "race_id",
                "publisher_id",
                "alignment_id"
            ]
        },
        "chain_of_thought_reasoning": "The question asks to calculate the percentage of superheroes with blue eyes. The hint provides a formula and clarifies that blue eyes refer to color = 'Blue' and color.id = 7. This means we need to identify the superheroes with eye_colour_id = 7, which corresponds to the 'Blue' color. The superhero table has a foreign key eye_colour_id that references the colour table. Therefore, we need to join the superhero table with the colour table to filter superheroes with blue eyes. Additionally, we need the superhero table to get the total count of superheroes. The hero table is not relevant to this question. The superpower table is also not relevant. The hero_power table is not relevant. The alignment table is not relevant. The attribute table is not relevant. The gender table is not relevant. The publisher table is not relevant. The race table is not relevant. The colour table is necessary to get the superheroes with blue eyes. The superhero table is necessary to get the total count of superheroes.",
        "selected_tables": [
            "colour",
            "superhero"
        ],
        "missing_table_status": "success",
        "missing_tables": [],
        "missing_column_status": "success",
        "missing_columns": [],
        "correct_columns": {
            "superhero": [
                "eye_colour_id",
                "id"
            ],
            "colour": [
                "id",
                "colour"
            ]
        },
        "status": "success"
    },
    {
        "node_type": "column_selection",
        "tentative_schema": {
            "colour": [
                "id",
                "colour"
            ],
            "superhero": [
                "id",
                "eye_colour_id"
            ]
        },
        "model_selected_columns": {
            "colour": [
                "id",
                "colour"
            ],
            "superhero": [
                "id",
                "eye_colour_id"
            ]
        },
        "chain_of_thought_reasoning": "The question asks to calculate the percentage of superheroes with blue eyes. The hint provides a formula and specifies that 'blue eyes' refers to color = 'Blue' and color.id =  eye_colour_id = 7. This indicates that we need to filter superheroes based on their eye colour. The table 'superhero' has a foreign key 'eye_colour_id' that references the 'colour' table. Therefore, we need to select columns from both tables.",
        "missing_table_status": "success",
        "missing_tables": [],
        "missing_column_status": "success",
        "missing_columns": [],
        "correct_columns": {
            "superhero": [
                "eye_colour_id",
                "id"
            ],
            "colour": [
                "id",
                "colour"
            ]
        },
        "status": "success"
    },
    {
        "node_type": "candidate_generation",
        "SQL": "SELECT CAST(SUM(CASE WHEN T1.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id ",
        "status": "success"
    },
    {
        "node_type": "revision",
        "chain_of_thought_reasoning": "I started by identifying the column that represents the superhero's eye color, which is `eye_colour_id` in the `superhero` table. I then joined the `colour` table with the `superhero` table on the `id` column to filter the superheroes with blue eyes. I used a `CASE` statement to count the number of superheroes with blue eyes and then divided it by the total number of superheroes to calculate the percentage.",
        "SQL": "SELECT CAST(COUNT(CASE WHEN T1.colour = 'Blue' THEN T2.id ELSE NULL END) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero) FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id",
        "status": "success"
    },
    {
        "node_type": "evaluation",
        "candidate_generation": {
            "exec_res": 1,
            "exec_err": "--",
            "Question": "Calculate the percentage of superheroes with blue eyes.",
            "Evidence": "percentage = MULTIPLY(DIVIDE(SUM(superhero_name WHERE color = 'Blue'), COUNT(superhero_name)), 100.0); blue eyes refers to color = 'Blue' and color.id =  eye_colour_id = 7;",
            "GOLD_SQL": "SELECT CAST(COUNT(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id",
            "PREDICTED_SQL": "SELECT CAST(SUM(CASE WHEN T1.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id "
        },
        "revision": {
            "exec_res": 1,
            "exec_err": "--",
            "Question": "Calculate the percentage of superheroes with blue eyes.",
            "Evidence": "percentage = MULTIPLY(DIVIDE(SUM(superhero_name WHERE color = 'Blue'), COUNT(superhero_name)), 100.0); blue eyes refers to color = 'Blue' and color.id =  eye_colour_id = 7;",
            "GOLD_SQL": "SELECT CAST(COUNT(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id",
            "PREDICTED_SQL": "SELECT CAST(COUNT(CASE WHEN T1.colour = 'Blue' THEN T2.id ELSE NULL END) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero) FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id"
        },
        "status": "success"
    }
]